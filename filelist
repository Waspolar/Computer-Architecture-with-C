#include <stdio.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <dirent.h>
#include <sys/types.h>
#include <errno.h>
#include <time.h>
#include <stdlib.h>
#include <sys/sysmacros.h>
#include <string.h>


struct stat fstatus;
int doCurDir = 0;

void PrintData(char* name){
   //USR


  
  stat(name, &fstatus);
  
  
  if((fstatus.st_mode&S_IRUSR) == S_IRUSR){
    printf("%c", 'r');
  }
  else{
    printf("-");
  }
  if((fstatus.st_mode&S_IWUSR) == S_IWUSR){
    printf("%c", 'w');
  }
  else{
    printf("-");
  
}
  if((fstatus.st_mode&S_IXUSR) == S_IXUSR){
    printf("%c", 'x');
  }
  else{
    printf("-");
  
   
}
  //GRP
  
  if((fstatus.st_mode&S_IRGRP) == S_IRGRP){
    printf("%c", 'r');
  }
  else{
    printf("-");
  }
   if((fstatus.st_mode&S_IWGRP) == S_IWGRP){
    printf("%c", 'w');
  }
  else{
    printf("-");
  
}
  if((fstatus.st_mode&S_IXGRP) == S_IXGRP){
    printf("%c", 'x');
  }
  else{
    printf("-");
}
  //OTH
  if((fstatus.st_mode&S_IROTH) == S_IROTH){
    printf("%c", 'r');
  }
  else{
    printf("-");
  }
   if((fstatus.st_mode&S_IWOTH) == S_IWOTH){
    printf("%c", 'w');
  }
  else{
    printf("-");
  
}
  if((fstatus.st_mode&S_IXOTH) == S_IXOTH){
    printf("%c", 'x');
  }
  else{
    printf("-");
}
  printf("%6s", "");
  
  printf("%li", fstatus.st_size);
  
  printf("%6s", "");

   char* no_newline_forCTime = strtok(ctime(&fstatus.st_atime), "\n");

    printf("%6s", no_newline_forCTime);


     }

void DirectoryTrav(char* dirname){
  
   DIR *d;
  struct dirent *dir;
   char full_path_name[257];

    d = opendir(dirname);

if(doCurDir = 1){
  if(d){
    
    while((dir = readdir(d)) != NULL){
      PrintData(dir->d_name);
        
      printf("%6s", "");

      printf("%s\n", dir->d_name);
    }
      closedir(d);
    
    exit(1);
  }
  
}
   
     
     while((dir = readdir(d)) != NULL){
     sprintf(full_path_name, "%s/%s", dirname, dir->d_name);
       
       PrintData(full_path_name);
       printf("      %s\n", dir->d_name);

}
         PrintData(full_path_name);

}



int main(int argc, char* argv[]){

  DIR *d;
  struct dirent *dir;
    struct stat fstat;

  



 //if there is no command line argument it lists the files in current directory
   
  
 if(argc < 2)
 {
   doCurDir = 1;
    DirectoryTrav(".");
   exit(1);
 }
  
  
   //if there is one command line arguement and it is a file name, it lists the file name.

 stat(argv[1], &fstat);
     if(S_ISREG(fstat.st_mode))
  {
      PrintData(argv[1]);
       
        printf("%6s", "");

        printf("%6s\n", argv[1]);

       exit(1);
  }
  
  
   //if there is one command line argument and it is a directory path list the files in the directory

  char full_path_name[257];

  if(S_ISDIR(fstat.st_mode)){
    DirectoryTrav(argv[1]);
    printf("\n");
    exit(1);
  }
      // if there is one command line argument but stat doesnt recognize it

  if((S_ISDIR(fstat.st_mode) != 1) && (S_ISREG(fstat.st_mode)) != 1){
     perror("PERROR");
  }
       return 0;
  }

// The four cases are (1) if there is no arg print current dir (2) if there is arg and it is file print file (3) if it is arg and is dir, print what's in dir and (4) if there is arg but it isnt recognized then print perror.
